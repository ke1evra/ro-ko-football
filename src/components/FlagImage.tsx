'use client'

import React from 'react'

// Fallback —ç–º–æ–¥–∑–∏ —Ñ–ª–∞–≥–æ–≤ –¥–ª—è –æ—Å–Ω–æ–≤–Ω—ã—Ö —Å—Ç—Ä–∞–Ω
const COUNTRY_FLAG_EMOJI: Record<string, string> = {
  –ê–Ω–≥–ª–∏—è: 'üè¥Û†ÅßÛ†Å¢Û†Å•Û†ÅÆÛ†ÅßÛ†Åø',
  –ì–µ—Ä–º–∞–Ω–∏—è: 'üá©üá™',
  –ò—Ç–∞–ª–∏—è: 'üáÆüáπ',
  –§—Ä–∞–Ω—Ü–∏—è: 'üá´üá∑',
  –ò—Å–ø–∞–Ω–∏—è: 'üá™üá∏',
  –†–æ—Å—Å–∏—è: 'üá∑üá∫',
  –ü–æ—Ä—Ç—É–≥–∞–ª–∏—è: 'üáµüáπ',
  –ë–µ–ª—å–≥–∏—è: 'üáßüá™',
  –ù–æ—Ä–≤–µ–≥–∏—è: 'üá≥üá¥',
  –®–≤–µ—Ü–∏—è: 'üá∏üá™',
}

interface FlagImageProps {
  src?: string | null
  countryName?: string | null
  size?: 'small' | 'large'
  className?: string
}

export function FlagImage({ src, countryName, size = 'large', className }: FlagImageProps) {
  const [hasError, setHasError] = React.useState(false)

  const handleError = () => {
    setHasError(true)
  }

  const fallbackEmoji = countryName ? COUNTRY_FLAG_EMOJI[countryName] || '‚öΩ' : '‚öΩ'

  if (!src || hasError) {
    return (
      <span className={size === 'large' ? 'text-xl' : 'text-sm'} aria-hidden>
        {fallbackEmoji}
      </span>
    )
  }

  return (
    // eslint-disable-next-line @next/next/no-img-element
    <img
      src={src}
      alt={`${countryName} flag`}
      className={className}
      onError={handleError}
      onLoad={() => {
        if (process.env.NODE_ENV === 'development') {
          console.log('‚úÖ –§–ª–∞–≥ –∑–∞–≥—Ä—É–∂–µ–Ω:', src)
        }
      }}
    />
  )
}
