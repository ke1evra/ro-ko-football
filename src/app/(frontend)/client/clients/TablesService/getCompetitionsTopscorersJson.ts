/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import fetch from "@/lib/http/livescore/customFetch";
import type { GetCompetitionsTopscorersJsonQueryResponse, GetCompetitionsTopscorersJsonQueryParams, GetCompetitionsTopscorersJson400, GetCompetitionsTopscorersJson401, GetCompetitionsTopscorersJson404, GetCompetitionsTopscorersJson500 } from "../../types/GetCompetitionsTopscorersJson.ts";
import type { RequestConfig, ResponseErrorConfig } from "@/lib/http/livescore/customFetch";

export function getGetCompetitionsTopscorersJsonUrl() {
  const res = { method: 'GET', url: `/competitions/topscorers.json` as const }  
  return res
}

/**
 * @description Возвращает список лучших бомбардиров (до 20 игроков) текущего сезона указанного соревнования. Данные обновляются по мере развития сезона. Если новый сезон ещё не начался или только начался, список может быть пустым или содержать мало данных.  В дополнение к списку игроков, в ответ включается информация о самом соревновании, сезоне, а также о текущем выпуске (edition) турнира. **Параметры:**  - `competition_id` (обязательный) – ID соревнования, для которого нужны лучшие бомбардиры.  - `lang` (опциональный) – код языка для локализации имён игроков, команд, названия соревнования (при поддержке перевода).  **Пример запроса (бомбардиры Bundesliga, id=1):**  `GET /competitions/topscorers.json?competition_id=1&key=YOUR_KEY&secret=YOUR_SECRET`
 * @summary Топ бомбардиры соревнования
 * {@link /competitions/topscorers.json}
 */
export async function getCompetitionsTopscorersJson(params?: GetCompetitionsTopscorersJsonQueryParams, config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const { client: request = fetch, ...requestConfig } = config  
  
  const res = await request<GetCompetitionsTopscorersJsonQueryResponse, ResponseErrorConfig<GetCompetitionsTopscorersJson400 | GetCompetitionsTopscorersJson401 | GetCompetitionsTopscorersJson404 | GetCompetitionsTopscorersJson500>, unknown>({ method : "GET", url : getGetCompetitionsTopscorersJsonUrl().url.toString(), params, ... requestConfig })  
  return res
}