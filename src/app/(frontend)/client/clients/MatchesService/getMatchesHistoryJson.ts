/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@/lib/http/livescore/customFetch'
import type {
  GetMatchesHistoryJsonQueryResponse,
  GetMatchesHistoryJsonQueryParams,
  GetMatchesHistoryJson400,
  GetMatchesHistoryJson401,
  GetMatchesHistoryJson404,
  GetMatchesHistoryJson500,
} from '../../types/GetMatchesHistoryJson.ts'
import type { RequestConfig, ResponseErrorConfig } from '@/lib/http/livescore/customFetch'

export function getGetMatchesHistoryJsonUrl() {
  const res = { method: 'GET', url: `/matches/history.json` as const }
  return res
}

/**
 * @description Возвращает список **завершённых** матчей (история результатов) по указанным критериям. Обязателен фильтр по дате или диапазону дат, либо другим параметрам; иначе может вернуться ошибка или пустой результат.  **Параметры фильтрации:**  - Можно указать конкретную дату через параметр `date` (например, `date=2025-09-01`) для получения матчей, завершившихся в этот день.  - Либо указать диапазон через `from` и `to` (например, `from=2025-08-01&to=2025-08-31`) для получения истории за период. Если указан только `from`, без `to`, вернутся матчи от даты `from` за один день.  - Также доступны фильтры `competition_id`, `country_id` и `team_id` для ограничения выборки по турнирам, странам или командам, соответственно.  **Пример запроса (матчи 15 мая 2018 года):**  `GET /matches/history.json?date=2018-05-15&key=YOUR_KEY&secret=YOUR_SECRET`
 * @summary История матчей (завершённые матчи)
 * {@link /matches/history.json}
 */
export async function getMatchesHistoryJson(
  params?: GetMatchesHistoryJsonQueryParams,
  config: Partial<RequestConfig> & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config

  const res = await request<
    GetMatchesHistoryJsonQueryResponse,
    ResponseErrorConfig<
      | GetMatchesHistoryJson400
      | GetMatchesHistoryJson401
      | GetMatchesHistoryJson404
      | GetMatchesHistoryJson500
    >,
    unknown
  >({ method: 'GET', url: getGetMatchesHistoryJsonUrl().url.toString(), params, ...requestConfig })
  return res
}
