/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import fetch from "@/lib/http/livescore/customFetch";
import type { GetAuthVerifyJsonQueryResponse, GetAuthVerifyJson400, GetAuthVerifyJson401, GetAuthVerifyJson404, GetAuthVerifyJson500 } from "../../types/GetAuthVerifyJson.ts";
import type { RequestConfig, ResponseErrorConfig } from "@/lib/http/livescore/customFetch";

export function getGetAuthVerifyJsonUrl() {
  const res = { method: 'GET', url: `/auth/verify.json` as const }  
  return res
}

/**
 * @description Проверяет валидность предоставленных ключа API (`key`) и секрета (`secret`). Если пара корректна, возвращает сообщение об успешной верификации.  **Пример запроса:** `GET /auth/verify.json?key=YOUR_KEY&secret=YOUR_SECRET`  **Пример ответа (успех):**  ```json{  "success": true,  "data": {    "message": "Your API key and API secret are working correctly"  }}```При ошибке аутентификации возвращается стандартное сообщение об ошибке (например, "Invalid API key or secret") и код 401.
 * @summary Проверка API-ключа и секрета
 * {@link /auth/verify.json}
 */
export async function getAuthVerifyJson(config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const { client: request = fetch, ...requestConfig } = config  
  
  const res = await request<GetAuthVerifyJsonQueryResponse, ResponseErrorConfig<GetAuthVerifyJson400 | GetAuthVerifyJson401 | GetAuthVerifyJson404 | GetAuthVerifyJson500>, unknown>({ method : "GET", url : getGetAuthVerifyJsonUrl().url.toString(), ... requestConfig })  
  return res
}