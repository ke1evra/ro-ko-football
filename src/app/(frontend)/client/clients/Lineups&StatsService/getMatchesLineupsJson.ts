/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import fetch from "@/lib/http/livescore/customFetch";
import type { GetMatchesLineupsJsonQueryResponse, GetMatchesLineupsJsonQueryParams, GetMatchesLineupsJson400, GetMatchesLineupsJson401, GetMatchesLineupsJson404, GetMatchesLineupsJson500 } from "../../types/GetMatchesLineupsJson.ts";
import type { RequestConfig, ResponseErrorConfig } from "@/lib/http/livescore/customFetch";

export function getGetMatchesLineupsJsonUrl() {
  const res = { method: 'GET', url: `/matches/lineups.json` as const }  
  return res
}

/**
 * @description Возвращает стартовые составы и список запасных для обеих команд указанного матча. Эндпоинт доступен для начавшихся или завершённых матчей (для запланированных матчей, которые ещё не начались, данных может не быть).  **Параметры:** требуется `match_id` – ID матча (live или из истории). Можно указать `lang` для перевода имён игроков (при наличии поддержки).  **Пример запроса:**  `GET /matches/lineups.json?match_id=483252&key=YOUR_KEY&secret=YOUR_SECRET`
 * @summary Стартовые составы команды (матча)
 * {@link /matches/lineups.json}
 */
export async function getMatchesLineupsJson(params: GetMatchesLineupsJsonQueryParams, config: Partial<RequestConfig> & { client?: typeof fetch } = {}) {
  const { client: request = fetch, ...requestConfig } = config  
  
  const res = await request<GetMatchesLineupsJsonQueryResponse, ResponseErrorConfig<GetMatchesLineupsJson400 | GetMatchesLineupsJson401 | GetMatchesLineupsJson404 | GetMatchesLineupsJson500>, unknown>({ method : "GET", url : getGetMatchesLineupsJsonUrl().url.toString(), params, ... requestConfig })  
  return res
}