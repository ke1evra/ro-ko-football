/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import fetch from '@/lib/http/livescore/customFetch'
import type {
  GetScoresEventsJsonQueryResponse,
  GetScoresEventsJsonQueryParams,
  GetScoresEventsJson400,
  GetScoresEventsJson401,
  GetScoresEventsJson404,
  GetScoresEventsJson500,
} from '../../types/GetScoresEventsJson.ts'
import type { RequestConfig, ResponseErrorConfig } from '@/lib/http/livescore/customFetch'

export function getGetScoresEventsJsonUrl() {
  const res = { method: 'GET', url: `/scores/events.json` as const }
  return res
}

/**
 * @description Возвращает хронологию событий для указанного матча (как текущего live, так и завершённого). В начале матча список событий будет пустым, по мере развития игры события появляются в ответе в порядке их наступления.  **Параметры:** необходим `id` матча (`match_id` из live или history) для получения событий этого матча. Также можно указать `lang` для перевода названий событий и имён игроков (если поддерживается тарифом).  **Пример запроса (события матча с id=385735):**  `GET /scores/events.json?id=385735&key=YOUR_KEY&secret=YOUR_SECRET`
 * @summary События матча (голы, карточки, замены)
 * {@link /scores/events.json}
 */
export async function getScoresEventsJson(
  params: GetScoresEventsJsonQueryParams,
  config: Partial<RequestConfig> & { client?: typeof fetch } = {},
) {
  const { client: request = fetch, ...requestConfig } = config

  const res = await request<
    GetScoresEventsJsonQueryResponse,
    ResponseErrorConfig<
      | GetScoresEventsJson400
      | GetScoresEventsJson401
      | GetScoresEventsJson404
      | GetScoresEventsJson500
    >,
    unknown
  >({ method: 'GET', url: getGetScoresEventsJsonUrl().url.toString(), params, ...requestConfig })
  return res
}
