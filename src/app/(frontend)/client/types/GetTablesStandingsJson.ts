/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { ApiError } from './ApiError.ts'
import type { TableResponse } from './TableResponse.ts'

export const getTablesStandingsJsonQueryParamsIncludeFormEnum = {
  '0': 0,
  '1': 1,
} as const

export type GetTablesStandingsJsonQueryParamsIncludeFormEnum =
  (typeof getTablesStandingsJsonQueryParamsIncludeFormEnum)[keyof typeof getTablesStandingsJsonQueryParamsIncludeFormEnum]

export type GetTablesStandingsJsonQueryParams = {
  /**
   * @description ID соревнования (или несколько через запятую)
   */
  competition_id?: (number | string) | undefined
  /**
   * @description ISO 639-1 код языка для перевода (например, `ru`)
   * @type string | undefined
   */
  lang?: string | undefined
  /**
   * @description ID сезона (по умолчанию текущий)
   * @type integer | undefined
   */
  season?: number | undefined
  /**
   * @description Имя группы (если лига с группами)
   * @type string | undefined
   */
  group?: string | undefined
  /**
   * @description Включить форму последних игр (0/1)
   * @type integer | undefined
   */
  include_form?: GetTablesStandingsJsonQueryParamsIncludeFormEnum | undefined
}

/**
 * @description Турнирная таблица
 */
export type GetTablesStandingsJson200 = TableResponse

/**
 * @description Некорректный запрос
 */
export type GetTablesStandingsJson400 = ApiError

/**
 * @description Неавторизовано
 */
export type GetTablesStandingsJson401 = ApiError

/**
 * @description Соревнование не найдено
 */
export type GetTablesStandingsJson404 = ApiError

/**
 * @description Внутренняя ошибка
 */
export type GetTablesStandingsJson500 = ApiError

export type GetTablesStandingsJsonQueryResponse = GetTablesStandingsJson200

export type GetTablesStandingsJsonQuery = {
  Response: GetTablesStandingsJson200
  QueryParams: GetTablesStandingsJsonQueryParams
  Errors:
    | GetTablesStandingsJson400
    | GetTablesStandingsJson401
    | GetTablesStandingsJson404
    | GetTablesStandingsJson500
}
