/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { CompetitionsStandingsTableRow } from './CompetitionsStandingsTableRow.ts'

export const getCompetitionsStandingsJsonQueryParamsIncludeFormEnum = {
  '0': 0,
  '1': 1,
} as const

export type GetCompetitionsStandingsJsonQueryParamsIncludeFormEnum =
  (typeof getCompetitionsStandingsJsonQueryParamsIncludeFormEnum)[keyof typeof getCompetitionsStandingsJsonQueryParamsIncludeFormEnum]

export type GetCompetitionsStandingsJsonQueryParams = {
  /**
   * @description ID соревнования (или несколько ID через запятую) для фильтрации результатов
   * @type string | undefined
   */
  competition_id?: string | undefined
  /**
   * @description ID сезона, для которого нужна таблица (если не текущий)
   * @type integer | undefined
   */
  season?: number | undefined
  /**
   * @description Имя группы, если нужно standings конкретной группы (для много-групповых соревнований, напр. \"A\")
   * @type string | undefined
   */
  group?: string | undefined
  /**
   * @description ID группы, если известен и нужен standings конкретной группы
   * @type integer | undefined
   */
  group_id?: number | undefined
  /**
   * @description Если =1, в ответ включается форма команд за последние 5-6 матчей (последовательность W/D/L)
   * @type integer | undefined
   */
  include_form?: GetCompetitionsStandingsJsonQueryParamsIncludeFormEnum | undefined
  /**
   * @description ISO 639-1 код языка для локализации данных (например, `ru` для русского)
   * @type string | undefined
   */
  lang?: string | undefined
}

/**
 * @description OK – таблица получена
 */
export type GetCompetitionsStandingsJson200 = {
  /**
   * @type boolean | undefined
   */
  success?: boolean | undefined
  /**
   * @type object | undefined
   */
  data?:
    | {
        /**
         * @description Таблица позиций команд (реальная структура API)
         * @type array | undefined
         */
        table?: CompetitionsStandingsTableRow[] | undefined
      }
    | undefined
}

/**
 * @description Ошибка запроса
 */
export type GetCompetitionsStandingsJson400 = {
  /**
   * @type boolean | undefined
   */
  success?: boolean | undefined
  /**
   * @type string | undefined
   */
  error?: string | undefined
}

/**
 * @description Неавторизован (неверные ключ или секрет)
 */
export type GetCompetitionsStandingsJson401 = unknown

/**
 * @description Соревнование не найдено
 */
export type GetCompetitionsStandingsJson404 = unknown

/**
 * @description Внутренняя ошибка сервера
 */
export type GetCompetitionsStandingsJson500 = unknown

export type GetCompetitionsStandingsJsonQueryResponse = GetCompetitionsStandingsJson200

export type GetCompetitionsStandingsJsonQuery = {
  Response: GetCompetitionsStandingsJson200
  QueryParams: GetCompetitionsStandingsJsonQueryParams
  Errors:
    | GetCompetitionsStandingsJson400
    | GetCompetitionsStandingsJson401
    | GetCompetitionsStandingsJson404
    | GetCompetitionsStandingsJson500
}
