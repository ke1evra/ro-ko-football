/* eslint-disable @typescript-eslint/no-explicit-any */
/**
* Generated by Kubb (https://kubb.dev/).
* Do not edit manually.
*/

import type { Fixture } from "./Fixture.ts";

export type GetFixturesMatchesJsonQueryParams = {
    /**
     * @description ISO 639-1 код языка для локализации данных (например, `ru` для русского)
     * @type string | undefined
    */
    lang?: string | undefined;
    /**
     * @description Номер страницы для постраничной навигации (при наличии более 30 элементов в ответе)
     * @minLength 1
     * @type integer | undefined
    */
    page?: number | undefined;
    /**
     * @description Количество элементов на страницу (если поддерживается эндпоинтом; по умолчанию 30)
     * @minLength 1
     * @maxLength 100
     * @type integer | undefined
    */
    size?: number | undefined;
    /**
     * @description ID соревнования (или несколько ID через запятую) для фильтрации результатов
     * @type string | undefined
    */
    competition_id?: string | undefined;
    /**
     * @description ID страны для фильтрации результатов (например, получать данные только по соревнованиям или матчам в заданной стране)
     * @type integer | undefined
    */
    country_id?: number | undefined;
    /**
     * @description ID команды для фильтрации результатов (например, получать только матчи с участием указанной команды)
     * @type integer | undefined
    */
    team_id?: number | undefined;
    /**
     * @description Конкретная дата для фильтрации (формат YYYY-MM-DD) – возвращает данные (матчи) за указанную дату. Специальное значение `today` означает текущий день.
     * @type string | undefined, date
    */
    date?: Date | undefined;
    /**
     * @description Начало диапазона дат для фильтрации истории/расписания матчей. Используется вместе с параметром `to`.
     * @type string | undefined, date
    */
    from?: Date | undefined;
    /**
     * @description Конец диапазона дат для фильтрации истории/расписания матчей (включительно). Если не указан при использовании `from`, считается равным `from`.
     * @type string | undefined, date
    */
    to?: Date | undefined;
};

/**
 * @description OK – список запланированных матчей получен
*/
export type GetFixturesMatchesJson200 = {
    /**
     * @type boolean | undefined
    */
    success?: boolean | undefined;
    /**
     * @type object | undefined
    */
    data?: {
        /**
         * @description Список запланированных матчей (fixtures)
         * @type array | undefined
        */
        fixtures?: Fixture[] | undefined;
        /**
         * @description Ссылка (URL) на следующую страницу результатов (если есть следующая)
         * @type string
        */
        next_page?: (string | null) | undefined;
        /**
         * @description Ссылка на предыдущую страницу (если есть)
         * @type string
        */
        prev_page?: (string | null) | undefined;
    } | undefined;
};

/**
 * @description Ошибка запроса
*/
export type GetFixturesMatchesJson400 = {
    /**
     * @type boolean | undefined
    */
    success?: boolean | undefined;
    /**
     * @type string | undefined
    */
    error?: string | undefined;
};

/**
 * @description Неавторизован (неверные ключ или секрет)
*/
export type GetFixturesMatchesJson401 = unknown;

/**
 * @description Эндпоинт не найден
*/
export type GetFixturesMatchesJson404 = unknown;

/**
 * @description Внутренняя ошибка сервера
*/
export type GetFixturesMatchesJson500 = unknown;

export type GetFixturesMatchesJsonQueryResponse = GetFixturesMatchesJson200;

export type GetFixturesMatchesJsonQuery = {
    Response: GetFixturesMatchesJson200;
    QueryParams: GetFixturesMatchesJsonQueryParams;
    Errors: GetFixturesMatchesJson400 | GetFixturesMatchesJson401 | GetFixturesMatchesJson404 | GetFixturesMatchesJson500;
};