#!/usr/bin/env node

/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ endpoint /teams/listing.json
 */

const fs = require('fs')
const path = require('path')
const https = require('https')

// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
const CONFIG = {
  API_KEY: 'JFSoWhkq1FIky8SS',
  API_SECRET: 'qbjc7aeuFAJo1E5KjX8fetGg9oAIxtBY',
  BASE_URL: 'https://livescore-api.com/api-client',
  PAGE_SIZE: 10,
}

// HTTP –∑–∞–ø—Ä–æ—Å –∫ API
function makeApiRequest(url) {
  return new Promise((resolve, reject) => {
    const fullUrl = `${CONFIG.BASE_URL}${url}&key=${CONFIG.API_KEY}&secret=${CONFIG.API_SECRET}`
    console.log(`–ó–∞–ø—Ä–æ—Å –∫ API: ${fullUrl}`)
    
    https.get(fullUrl, (res) => {
      let data = ''
      
      res.on('data', (chunk) => {
        data += chunk
      })
      
      res.on('end', () => {
        try {
          const jsonData = JSON.parse(data)
          resolve(jsonData)
        } catch (e) {
          reject(new Error(`–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON: ${e.message}`))
        }
      })
    }).on('error', (err) => {
      reject(err)
    })
  })
}

// –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
async function main() {
  console.log('=== –¢–µ—Å—Ç–∏—Ä—É–µ–º endpoint /teams/listing.json ===')
  
  try {
    const url = `/teams/listing.json?page=1&size=${CONFIG.PAGE_SIZE}`
    const response = await makeApiRequest(url)
    
    console.log('–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ—Ç–≤–µ—Ç–∞:')
    console.log(`Success: ${response.success}`)
    
    if (response.success && response.data) {
      const teams = response.data.teams || []
      console.log(`\n–ü–æ–ª—É—á–µ–Ω–æ –∫–æ–º–∞–Ω–¥: ${teams.length}`)
      
      if (response.data.total) {
        console.log(`–í—Å–µ–≥–æ –∫–æ–º–∞–Ω–¥ –≤ –±–∞–∑–µ: ${response.data.total}`)
      }
      if (response.data.pages) {
        console.log(`–í—Å–µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü: ${response.data.pages}`)
      }
      
      console.log('\n–ü–µ—Ä–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã —Å –ª–æ–≥–æ—Ç–∏–ø–∞–º–∏:')
      teams.forEach((item, index) => {
        const team = item.team || item
        console.log(`${index + 1}. ID: ${team.id}, –ù–∞–∑–≤–∞–Ω–∏–µ: ${team.name}`)
        console.log(`   –õ–æ–≥–æ—Ç–∏–ø: ${team.logo || '–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç'}`)
        if (team.logo) {
          console.log(`   ‚úÖ –õ–æ–≥–æ—Ç–∏–ø –Ω–∞–π–¥–µ–Ω!`)
        }
        console.log('')
      })
      
      // –ü–æ–¥—Å—á–∏—Ç–∞–µ–º –∫–æ–º–∞–Ω–¥—ã —Å –ª–æ–≥–æ—Ç–∏–ø–∞–º–∏
      const teamsWithLogos = teams.filter(item => {
        const team = item.team || item
        return team.logo
      })
      
      console.log(`\n–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:`)
      console.log(`–ö–æ–º–∞–Ω–¥ —Å –ª–æ–≥–æ—Ç–∏–ø–∞–º–∏: ${teamsWithLogos.length} –∏–∑ ${teams.length}`)
      console.log(`–ü—Ä–æ—Ü–µ–Ω—Ç –∫–æ–º–∞–Ω–¥ —Å –ª–æ–≥–æ—Ç–∏–ø–∞–º–∏: ${Math.round((teamsWithLogos.length / teams.length) * 100)}%`)
      
      if (teamsWithLogos.length > 0) {
        console.log('\nüéâ –û—Ç–ª–∏—á–Ω–æ! –õ–æ–≥–æ—Ç–∏–ø—ã –Ω–∞–π–¥–µ–Ω—ã, –º–æ–∂–Ω–æ —Å–æ–∑–¥–∞–≤–∞—Ç—å —Å–∫—Ä–∏–ø—Ç –∑–∞–≥—Ä—É–∑–∫–∏!')
      }
    }
    
  } catch (error) {
    console.error(`–û—à–∏–±–∫–∞: ${error.message}`)
  }
}

// –ó–∞–ø—É—Å–∫
main()